{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/Documents/github/react-practice/src/context/index.js\";\nimport React, { Component } from 'react';\nimport { ThemeContext, themes } from './theme-context';\nimport ThemedButton from './themed-button'; // An intermediate component that uses the ThemedButton\n\nfunction Toolbar(props) {\n  return React.createElement(ThemedButton, {\n    onClick: props.changeTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"change theme\");\n}\n\nclass LearnContext extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: themes.light\n    };\n\n    this.toggleTheme = () => {\n      this.setState(state => ({\n        theme: state.theme === themes.dark ? themes.light : themes.dark\n      }));\n    };\n  }\n\n  render() {\n    // The ThemedButton button inside the ThemeProvider\n    // uses the theme from state while the one outside uses\n    // the default dark theme\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(ThemeContext.Provider, {\n      value: this.state.theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      changeTheme: this.toggleTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(ThemedButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default LearnContext;","map":{"version":3,"sources":["/Users/dylan/Documents/github/react-practice/src/context/index.js"],"names":["React","Component","ThemeContext","themes","ThemedButton","Toolbar","props","changeTheme","LearnContext","constructor","state","theme","light","toggleTheme","setState","dark","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAR,EAAsBC,MAAtB,QAAmC,iBAAnC;AACA,OAAOC,YAAP,MAAyB,iBAAzB,C,CAEA;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AACrB,SACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,KAAK,CAACC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD;;AAED,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AACnCQ,EAAAA,WAAW,CAACH,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKI,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAER,MAAM,CAACS;AADH,KAAb;;AAIA,SAAKC,WAAL,GAAmB,MAAM;AACvB,WAAKC,QAAL,CAAcJ,KAAK,KAAK;AACtBC,QAAAA,KAAK,EACHD,KAAK,CAACC,KAAN,KAAgBR,MAAM,CAACY,IAAvB,GACIZ,MAAM,CAACS,KADX,GAEIT,MAAM,CAACY;AAJS,OAAL,CAAnB;AAMD,KAPD;AAQD;;AAEDC,EAAAA,MAAM,GAAE;AACN;AACA;AACA;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,WAAW,EAAE,KAAKE,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAUD;;AAhCkC;;AAmCrC,eAAeL,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport {ThemeContext, themes} from './theme-context';\nimport ThemedButton from './themed-button';\n\n// An intermediate component that uses the ThemedButton\nfunction Toolbar(props){\n  return (\n    <ThemedButton onClick={props.changeTheme}>\n    change theme\n    </ThemedButton>\n  )\n}\n\nclass LearnContext extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      theme: themes.light,\n    };\n\n    this.toggleTheme = () => {\n      this.setState(state => ({\n        theme:\n          state.theme === themes.dark\n            ? themes.light\n            : themes.dark,\n      }));\n    };\n  }\n\n  render(){\n    // The ThemedButton button inside the ThemeProvider\n    // uses the theme from state while the one outside uses\n    // the default dark theme\n    return (\n      <div>\n        <ThemeContext.Provider value={this.state.theme}>\n          <Toolbar changeTheme={this.toggleTheme} />\n        </ThemeContext.Provider>\n        <div>\n          <ThemedButton />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LearnContext;"]},"metadata":{},"sourceType":"module"}